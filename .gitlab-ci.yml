# .gitlab-ci.yml
# paritytech/scripts
#

stages:
  - build
  - deploy
  - destroy

variables:
  # CONTAINER_IMAGE:    registry.gitlab.com/$CI_PROJECT_PATH
  # DOCKER_HOST:        tcp://docker:2375
  DOCKER_HOST:          tcp://localhost:2375
  DOCKER_DRIVER:        overlay2
  CONTAINER_IMAGE:      $CI_JOB_NAME
  CONTAINER_TAG:        latest
  DOCKERFILE_DIR:       $CI_JOB_NAME


.kubernetes-build:      &kubernetes-build
  only:
    refs:
      - schedules
      - web
    kubernetes:         active
  tags:
    - kubernetes-parity-build


.build:                 &docker_build
  stage:                build
  <<:                   *kubernetes-build
  image:                docker:stable
  variables:
    REGISTRY_PATH:      paritytech
  services:
    - docker:dind
  before_script:
    - test -z "$DOCKERIMAGE" && echo "DOCKERIMAGE must be defined" && exit 1
    - docker login -u "${Docker_Hub_User_Parity}" -p "${Docker_Hub_Pass_Parity}"
    - docker info
  script:               &build_and_push_image
    - cd dockerfiles/
    - export CONTAINER_DATE_TAG="${CI_COMMIT_SHORT_SHA}-$(date +%Y%m%d)"
    - docker build --no-cache
        --build-arg VCS_REF="${CI_COMMIT_SHA}"
        --build-arg BUILD_DATE="$(date +%Y%m%d)"
        --build-arg REGISTRY_PATH=$REGISTRY_PATH
        --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
        --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
        --file $DOCKERFILE_DIR/Dockerfile .
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_DATE_TAG
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
  after_script:
    - docker logout
  environment:
    name:               parity-build

.build_to_own_reg:      &docker_build_to_own_reg
  <<:                   *docker_build
  variables:
    REGISTRY_PATH:      "registry.parity.io/parity/infrastructure/scripts"
  before_script:
    - test -z "$DOCKERIMAGE" && echo "DOCKERIMAGE must be defined" && exit 1
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  <<:                   *build_and_push_image

#Build to own registry

base-ci-linux:
  <<:                   *docker_build_to_own_reg
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

substrate-ci-linux:
  <<:                   *docker_build_to_own_reg
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

ink-ci-linux:
  <<:                   *docker_build_to_own_reg
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

contracts-ci-linux:
  <<:                   *docker_build_to_own_reg
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

#Build to docker hub

base-ci-linux:
  <<:                   *docker_build
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

substrate-ci-linux:
  <<:                   *docker_build
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

ink-ci-linux:
  <<:                   *docker_build
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

contracts-ci-linux:
  <<:                   *docker_build
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

awscli:
  <<:                   *docker_build
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

tools:
  <<:                   *docker_build
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

query-exporter:
  <<:                   *docker_build
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

redis-exporter:
  <<:                   *docker_build
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME

# build k8s on top of node 12-alphine
chaostools:
  <<:                   *docker_build
  variables:
    # https://github.com/kubernetes/kubernetes/releases
    BUILD_KUBE_VERSION: "1.14.6"
  only:
    variables:
      - $DOCKERIMAGE == "chaostools"
  script:
    - |
      cat <<-EOT
      |
      | # build of chaostools image
      |
      | KUBE_VERSION = ${BUILD_KUBE_VERSION}
      |
      EOT
    - cd dockerfiles/
    - docker build
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg REGISTRY_PATH=$REGISTRY_PATH
      --build-arg KUBE_VERSION="${BUILD_KUBE_VERSION}"
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
      --file $DOCKERFILE_DIR/Dockerfile .
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG

# special case as version tags are introduced
kubetools:
  <<:                   *docker_build
  variables:
    # https://github.com/kubernetes/kubernetes/releases
    BUILD_KUBE_VERSION: "1.14.6"
    # https://github.com/kubernetes/helm/releases
    # will be overwritten by the global variable at
    # https://gitlab.parity.io/groups/parity/-/settings/ci_cd
    BUILD_HELM_VERSION: "2.14.3"
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME
      - $DOCKERIMAGE == "kubetools"
  script:
    - |
      cat <<-EOT
      |
      | # build of kubetools image
      |
      | KUBE_VERSION = ${BUILD_KUBE_VERSION}
      | HELM_VERSION = ${BUILD_HELM_VERSION}
      |
      EOT
    - cd dockerfiles/
    - docker build
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg REGISTRY_PATH=$REGISTRY_PATH
      --build-arg KUBE_VERSION="${BUILD_KUBE_VERSION}"
      --build-arg HELM_VERSION="${BUILD_HELM_VERSION}"
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$BUILD_HELM_VERSION
      --file $DOCKERFILE_DIR/Dockerfile .
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$BUILD_HELM_VERSION


terraform:
  <<:                   *docker_build
  variables:
    # https://releases.hashicorp.com/terraform/
    TERRAFORM_VERSION:  "0.12.24"
  only:
    variables:
      - $DOCKERIMAGE == $CI_JOB_NAME
  script:
    - |
      cat <<-EOT
      |
      | # build of terraform image
      |
      | TERRAFORM_VERSION = ${TERRAFORM_VERSION}
      |
      EOT
    - cd dockerfiles/
    - docker build
      --build-arg VCS_REF="${CI_COMMIT_SHA}"
      --build-arg BUILD_DATE="$(date -u '+%Y-%m-%dT%H:%M:%SZ')"
      --build-arg REGISTRY_PATH=$REGISTRY_PATH
      --build-arg TERRAFORM_VERSION="${TERRAFORM_VERSION}"
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
      --tag $REGISTRY_PATH/$CONTAINER_IMAGE:$TERRAFORM_VERSION
      --file $DOCKERFILE_DIR/Dockerfile .
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$CONTAINER_TAG
    - docker push $REGISTRY_PATH/$CONTAINER_IMAGE:$TERRAFORM_VERSION



# vim:                  expandtab sts=2
